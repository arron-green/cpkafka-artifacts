#!/usr/bin/env bash
set -e

SOURCE_BRANCH="master"
TARGET_BRANCH="releases"

# Pull requests and commits to other branches shouldn't try to deploy, just build to verify
if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "$SOURCE_BRANCH" ]; then
    echo "Skipping deploy; just doing a build."
    ./build
    exit 0
fi

# Save some useful information
REPO=$(git config remote.origin.url)
SSH_REPO=${REPO/https:\/\/github.com\//git@github.com:}
SHA=$(git rev-parse --verify HEAD)

# Clean out existing contents
rm -rf out/**/* || exit 0

./build

git config user.name "Travis CI"
git config user.email "arrong@gmail.com"

git add -f build-artifacts
git diff --exit-code --cached && (echo "No changes to the spec on this push; exiting."; exit 0)

git commit -m "BUILD: ${SHA}" build-artifacts
git checkout $TARGET_BRANCH || git checkout --orphan $TARGET_BRANCH

# Get the deploy key by using Travis's stored variables to decrypt deploy_key.enc
ENCRYPTED_KEY_VAR="encrypted_${ENCRYPTION_LABEL}_key"
ENCRYPTED_IV_VAR="encrypted_${ENCRYPTION_LABEL}_iv"
ENCRYPTED_KEY=${!ENCRYPTED_KEY_VAR}
ENCRYPTED_IV=${!ENCRYPTED_IV_VAR}
openssl aes-256-cbc -K $ENCRYPTED_KEY -iv $ENCRYPTED_IV -in deploykey.enc -out deploykey -d
chmod 600 deploykey
eval $(ssh-agent -s)
ssh-add deploykey

git push $SSH_REPO $TARGET_BRANCH
